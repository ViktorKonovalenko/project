---
# tasks file for postgres_replication
- name: install base tools
  yum:
    name:
      - python36-pexpect
      - python-pip
      - python3-psycopg2
      - python-psycopg2
      - zabbix-agent
    state: present
    update_cache: true

- name: Install pexpect
  pip:
    name: pexpect
- name: Create replicator user
  become_user: postgres
  postgresql_user:
    name: replication
    password: '{{ replicator_password }}'
    role_attr_flags: REPLICATION 
  ignore_errors: true
  when: (ansible_hostname == "db1")

  #Остановливаем postgresql-14 на хосте db2
- name: stop postgresql-server on db2
  service: 
    name: postgresql-14
    state: stopped
  when: (ansible_hostname == "db3")
 #Копиуем конфигурационный файл postgresql.conf
- name: copy postgresql.conf
  template:
    src: postgresql.conf.j2
    dest: /var/lib/pgsql/14/data/postgresql.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "db1")
 #Копиуем конфигурационный файл pg_hba.conf
- name: copy pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: /var/lib/pgsql/14/data/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'
  when: (ansible_hostname == "db1")

  #Перезапускаем службу  postgresql-14
- name: restart postgresql-server on db1
  service: 
    name: postgresql-14
    state: restarted
  when: (ansible_hostname == "db1")

  #Удаляем содержимое каталога /var/lib/pgsql/14/data/
- name: Remove files from data catalog
  file:
    path: /var/lib/pgsql/14/data/
    state: absent
  when: (ansible_hostname == "db3")

  #Копируем данные с node1 на db2
- name: copy files from master to slave
  become_user: postgres
  expect:
    command: 'pg_basebackup -h {{ master_ip }} -U  replication -p 5432 -D /var/lib/pgsql/14/data/ -R -P'
    responses: 
      '.*Пароль*': "{{ replicator_password }}"
  when: (ansible_hostname == "db3")
  tags: repl
  #Запускаем службу postgresql-14 на хосте node2
- name: start postgresql-server on db2
  systemd: 
    name: postgresql-14
    state: started
  when: (ansible_hostname == "db3")
